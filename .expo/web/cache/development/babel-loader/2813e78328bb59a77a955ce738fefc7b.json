{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\nbcc-staff-react-native\\\\app\\\\screens\\\\DisplayContent.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Screen from \"../components/screen\";\nimport Seperator from \"../components/Seperator\";\nimport colors from \"../config/colors\";\nimport content from \"../api/content\";\n\nfunction DisplayContent(_ref) {\n  var _ref$content_id = _ref.content_id,\n      content_id = _ref$content_id === void 0 ? 76 : _ref$content_id,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contentText = _useState2[0],\n      setContentText = _useState2[1];\n\n  var regex = /(<([^>]+)>)/gi;\n\n  var GetContent = function GetContent(id) {\n    var result, textResult, regexWhitespace;\n    return _regeneratorRuntime.async(function GetContent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(content.getContent(id));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", console.log(\"No such content\"));\n\n          case 5:\n            textResult = result.data[0][\"content_text\"].replace(regex, \"\");\n            regexWhitespace = /(&ldquo;|&nbsp;|&rsquo;|&mdash;|&lsquo;|&amp;)/gi;\n            textResult = textResult.replace(regexWhitespace, \"\");\n            return _context.abrupt(\"return\", setContentText({\n              title: result.data[0][\"content_title\"],\n              text: textResult\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    GetContent(route.params.content_id);\n  }, []);\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, contentText.title), React.createElement(Seperator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, contentText.text))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  heading: {\n    fontSize: 23,\n    fontWeight: \"normal\",\n    color: colors.red,\n    padding: 10\n  },\n  mainText: {\n    padding: 10,\n    fontSize: 15,\n    textAlign: \"left\"\n  }\n});\nexport default DisplayContent;","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/app/screens/DisplayContent.js"],"names":["React","useEffect","useState","Screen","Seperator","colors","content","DisplayContent","content_id","route","contentText","setContentText","regex","GetContent","id","getContent","result","ok","console","log","textResult","data","replace","regexWhitespace","title","text","params","styles","container","heading","mainText","StyleSheet","create","flex","padding","fontSize","fontWeight","color","red","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAGA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;;AAEA,SAASC,cAAT,OAAoD;AAAA,6BAA1BC,UAA0B;AAAA,MAA1BA,UAA0B,gCAAb,EAAa;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACZP,QAAQ,CAAC,EAAD,CADI;AAAA;AAAA,MAC3CQ,WAD2C;AAAA,MAC9BC,cAD8B;;AAGlD,MAAMC,KAAK,GAAG,eAAd;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIR,OAAO,CAACS,UAAR,CAAmBD,EAAnB,CADJ;;AAAA;AACXE,YAAAA,MADW;;AAAA,gBAEZA,MAAM,CAACC,EAFK;AAAA;AAAA;AAAA;;AAAA,6CAEMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAFN;;AAAA;AAGbC,YAAAA,UAHa,GAGAJ,MAAM,CAACK,IAAP,CAAY,CAAZ,EAAe,cAAf,EAA+BC,OAA/B,CAAuCV,KAAvC,EAA8C,EAA9C,CAHA;AAIXW,YAAAA,eAJW,GAIO,kDAJP;AAKjBH,YAAAA,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmBC,eAAnB,EAAoC,EAApC,CAAb;AALiB,6CAMVZ,cAAc,CAAC;AACpBa,cAAAA,KAAK,EAAER,MAAM,CAACK,IAAP,CAAY,CAAZ,EAAe,eAAf,CADa;AAEpBI,cAAAA,IAAI,EAAEL;AAFc,aAAD,CANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAYAnB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU,CAACJ,KAAK,CAACiB,MAAN,CAAalB,UAAd,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BnB,WAAW,CAACc,KAA1C,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BpB,WAAW,CAACe,IAA3C,CAHF,CADF,CADF,CADF;AAWD;;AAED,IAAME,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE;AAFA,GADoB;AAK/BL,EAAAA,OAAO,EAAE;AACPM,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,KAAK,EAAEhC,MAAM,CAACiC,GAHP;AAIPJ,IAAAA,OAAO,EAAE;AAJF,GALsB;AAW/BJ,EAAAA,QAAQ,EAAE;AACRI,IAAAA,OAAO,EAAE,EADD;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRI,IAAAA,SAAS,EAAE;AAHH;AAXqB,CAAlB,CAAf;AAkBA,eAAehC,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Text, ScrollView } from \"react-native\";\r\n\r\nimport Screen from \"../components/screen\";\r\nimport Seperator from \"../components/Seperator\";\r\nimport colors from \"../config/colors\";\r\nimport content from \"../api/content\";\r\n\r\nfunction DisplayContent({ content_id = 76, route }) {\r\n  const [contentText, setContentText] = useState([]);\r\n\r\n  const regex = /(<([^>]+)>)/gi;\r\n\r\n  const GetContent = async (id) => {\r\n    const result = await content.getContent(id);\r\n    if (!result.ok) return console.log(\"No such content\");\r\n    let textResult = result.data[0][\"content_text\"].replace(regex, \"\");\r\n    const regexWhitespace = /(&ldquo;|&nbsp;|&rsquo;|&mdash;|&lsquo;|&amp;)/gi;\r\n    textResult = textResult.replace(regexWhitespace, \"\");\r\n    return setContentText({\r\n      title: result.data[0][\"content_title\"],\r\n      text: textResult,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetContent(route.params.content_id);\r\n  }, []);\r\n\r\n  return (\r\n    <Screen>\r\n      <View style={styles.container}>\r\n        <ScrollView>\r\n          <Text style={styles.heading}>{contentText.title}</Text>\r\n          <Seperator />\r\n          <Text style={styles.mainText}>{contentText.text}</Text>\r\n        </ScrollView>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  heading: {\r\n    fontSize: 23,\r\n    fontWeight: \"normal\",\r\n    color: colors.red,\r\n    padding: 10,\r\n  },\r\n  mainText: {\r\n    padding: 10,\r\n    fontSize: 15,\r\n    textAlign: \"left\",\r\n  },\r\n});\r\n\r\nexport default DisplayContent;\r\n"]},"metadata":{},"sourceType":"module"}