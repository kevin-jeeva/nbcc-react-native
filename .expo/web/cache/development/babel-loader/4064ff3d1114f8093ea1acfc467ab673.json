{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"G:\\\\wamp64\\\\www\\\\projectWellbeingApp\\\\app\\\\screens\\\\ChangePassword.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AppButton from \"../components/AppButton\";\nimport AppTextInput from \"../components/AppTextInput\";\nimport Screen from \"../components/screen\";\nimport AppText from \"../components/AppText\";\nimport colors from \"../config/colors\";\nimport user from \"../api/user\";\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  Newpassword: Yup.string().required().label(\"New Password\"),\n  Cnfpassword: Yup.string().required().label(\"Confirm Password\")\n});\n\nfunction ChangePassword(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    state: false,\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginFailed = _useState2[0],\n      setLoginFailed = _useState2[1];\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var email, Newpassword, Cnfpassword, results;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref2.email, Newpassword = _ref2.Newpassword, Cnfpassword = _ref2.Cnfpassword;\n\n            if (!(Newpassword == Cnfpassword)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(user.changePassword(email, Cnfpassword));\n\n          case 4:\n            results = _context.sent;\n\n            if (results.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setLoginFailed({\n              state: true,\n              error: \" Invalid Email Address\"\n            }));\n\n          case 7:\n            return _context.abrupt(\"return\", navigation.navigate(\"Account\"));\n\n          case 8:\n            setLoginFailed({\n              state: true,\n              error: \"Password not match\"\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.txt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Change Password\"), React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      Newpassword: \"\",\n      Cnfpassword: \"\"\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var handleChange = _ref3.handleChange,\n        handleSubmit = _ref3.handleSubmit,\n        errors = _ref3.errors,\n        setFieldTouched = _ref3.setFieldTouched,\n        touched = _ref3.touched;\n    return React.createElement(React.Fragment, null, React.createElement(AppText, {\n      style: styles.error,\n      visible: loginFailed.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, loginFailed.error), React.createElement(AppTextInput, {\n      placeholder: \"Enter Email\",\n      icon: \"email\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      onBlur: function onBlur() {\n        return setFieldTouched(\"email\");\n      },\n      onChangeText: handleChange(\"email\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }), React.createElement(AppText, {\n      style: styles.error,\n      visible: touched.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, errors.email), React.createElement(AppTextInput, {\n      placeholder: \"New Password\",\n      icon: \"lock\",\n      secureTextEntry: true,\n      textContentType: \"password\",\n      onChangeText: handleChange(\"Newpassword\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), React.createElement(AppText, {\n      style: styles.error,\n      visible: touched.Newpassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, errors.Newpassword), React.createElement(AppTextInput, {\n      placeholder: \"confirm Password\",\n      icon: \"lock\",\n      secureTextEntry: true,\n      textContentType: \"password\",\n      onChangeText: handleChange(\"Cnfpassword\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), React.createElement(AppText, {\n      style: styles.error,\n      visible: touched.Cnfpassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, errors.Cnfpassword), React.createElement(AppButton, {\n      sytle: styles.loginButton,\n      onPress: handleSubmit,\n      text: \"Change Password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 23\n  },\n  error: {\n    color: colors.error,\n    fontSize: 10,\n    alignSelf: \"flex-start\",\n    marginLeft: 10\n  },\n  loginButton: {\n    marginVertical: 30\n  },\n  logo: {\n    bottom: 60\n  },\n  txt: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 25\n  }\n});\nexport default ChangePassword;","map":{"version":3,"sources":["G:/wamp64/www/projectWellbeingApp/app/screens/ChangePassword.js"],"names":["React","useState","AsyncStorage","Formik","Yup","AppButton","AppTextInput","Screen","AppText","colors","user","validationSchema","object","shape","email","string","required","label","Newpassword","Cnfpassword","ChangePassword","navigation","state","error","loginFailed","setLoginFailed","handleSubmit","changePassword","results","ok","navigate","styles","container","txt","handleChange","errors","setFieldTouched","touched","loginButton","StyleSheet","create","flex","alignItems","justifyContent","padding","color","fontSize","alignSelf","marginLeft","marginVertical","logo","bottom","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, Image, AsyncStorage } from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport AppButton from \"../components/AppButton\";\r\nimport AppTextInput from \"../components/AppTextInput\";\r\nimport Screen from \"../components/screen\";\r\nimport AppText from \"../components/AppText\";\r\nimport colors from \"../config/colors\";\r\nimport user from \"../api/user\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  Newpassword: Yup.string().required().label(\"New Password\"),\r\n  Cnfpassword: Yup.string().required().label(\"Confirm Password\"),\r\n});\r\n\r\nfunction ChangePassword({ navigation }) {\r\n  const [loginFailed, setLoginFailed] = useState({ state: false, error: \"\" });\r\n  //check the email\r\n  const handleSubmit = async ({ email, Newpassword, Cnfpassword }) => {\r\n    if (Newpassword == Cnfpassword) {\r\n      const results = await user.changePassword(email, Cnfpassword);\r\n      if (!results.ok)\r\n        return setLoginFailed({ state: true, error: \" Invalid Email Address\" });\r\n      return navigation.navigate(\"Account\");\r\n    }\r\n    setLoginFailed({ state: true, error: \"Password not match\" });\r\n  };\r\n\r\n  return (\r\n    <Screen>\r\n      <View style={styles.container}>\r\n        <Text style={styles.txt}>Change Password</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", Newpassword: \"\", Cnfpassword: \"\" }}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleSubmit,\r\n            errors,\r\n            setFieldTouched,\r\n            touched,\r\n          }) => (\r\n            <>\r\n              <AppText style={styles.error} visible={loginFailed.state}>\r\n                {loginFailed.error}\r\n              </AppText>\r\n              <AppTextInput\r\n                placeholder=\"Enter Email\"\r\n                icon={\"email\"}\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                keyboardType=\"email-address\"\r\n                textContentType=\"emailAddress\"\r\n                onBlur={() => setFieldTouched(\"email\")}\r\n                onChangeText={handleChange(\"email\")}\r\n              />\r\n              <AppText style={styles.error} visible={touched.email}>\r\n                {errors.email}\r\n              </AppText>\r\n              <AppTextInput\r\n                placeholder=\"New Password\"\r\n                icon={\"lock\"}\r\n                secureTextEntry\r\n                textContentType=\"password\"\r\n                onChangeText={handleChange(\"Newpassword\")}\r\n              />\r\n              <AppText style={styles.error} visible={touched.Newpassword}>\r\n                {errors.Newpassword}\r\n              </AppText>\r\n              <AppTextInput\r\n                placeholder=\"confirm Password\"\r\n                icon={\"lock\"}\r\n                secureTextEntry\r\n                textContentType=\"password\"\r\n                onChangeText={handleChange(\"Cnfpassword\")}\r\n              />\r\n              <AppText style={styles.error} visible={touched.Cnfpassword}>\r\n                {errors.Cnfpassword}\r\n              </AppText>\r\n              <AppButton\r\n                sytle={styles.loginButton}\r\n                onPress={handleSubmit}\r\n                text={\"Change Password\"}\r\n              ></AppButton>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 23,\r\n  },\r\n  error: {\r\n    color: colors.error,\r\n    fontSize: 10,\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 10,\r\n  },\r\n  loginButton: {\r\n    marginVertical: 30,\r\n  },\r\n  logo: {\r\n    bottom: 60,\r\n  },\r\n  txt: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 25,\r\n  },\r\n});\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}