{"ast":null,"code":"'use strict';\n\nfunction deepFreezeAndThrowOnMutationInDev(object) {\n  if (__DEV__) {\n    if (typeof object !== 'object' || object === null || Object.isFrozen(object) || Object.isSealed(object)) {\n      return object;\n    }\n\n    var keys = Object.keys(object);\n    var _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (_hasOwnProperty.call(object, key)) {\n        Object.defineProperty(object, key, {\n          get: identity.bind(null, object[key])\n        });\n        Object.defineProperty(object, key, {\n          set: throwOnImmutableMutation.bind(null, key)\n        });\n      }\n    }\n\n    Object.freeze(object);\n    Object.seal(object);\n\n    for (var _i = 0; _i < keys.length; _i++) {\n      var _key = keys[_i];\n\n      if (_hasOwnProperty.call(object, _key)) {\n        deepFreezeAndThrowOnMutationInDev(object[_key]);\n      }\n    }\n  }\n\n  return object;\n}\n\nfunction throwOnImmutableMutation(key, value) {\n  throw Error('You attempted to set the key `' + key + '` with the value `' + JSON.stringify(value) + '` on an object that is meant to be immutable ' + 'and has been frozen.');\n}\n\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = deepFreezeAndThrowOnMutationInDev;","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/node_modules/react-native/Libraries/Utilities/deepFreezeAndThrowOnMutationInDev.js"],"names":["deepFreezeAndThrowOnMutationInDev","object","__DEV__","Object","isFrozen","isSealed","keys","hasOwnProperty","prototype","i","length","key","call","defineProperty","get","identity","bind","set","throwOnImmutableMutation","freeze","seal","value","Error","JSON","stringify","module","exports"],"mappings":"AAUA;;AAmBA,SAASA,iCAAT,CAAsDC,MAAtD,EAAoE;AAClE,MAAIC,OAAJ,EAAa;AACX,QACE,OAAOD,MAAP,KAAkB,QAAlB,IACAA,MAAM,KAAK,IADX,IAEAE,MAAM,CAACC,QAAP,CAAgBH,MAAhB,CAFA,IAGAE,MAAM,CAACE,QAAP,CAAgBJ,MAAhB,CAJF,EAKE;AACA,aAAOA,MAAP;AACD;;AAED,QAAMK,IAAI,GAAGH,MAAM,CAACG,IAAP,CAAYL,MAAZ,CAAb;AACA,QAAMM,eAAc,GAAGJ,MAAM,CAACK,SAAP,CAAiBD,cAAxC;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAME,GAAG,GAAGL,IAAI,CAACG,CAAD,CAAhB;;AACA,UAAIF,eAAc,CAACK,IAAf,CAAoBX,MAApB,EAA4BU,GAA5B,CAAJ,EAAsC;AACpCR,QAAAA,MAAM,CAACU,cAAP,CAAsBZ,MAAtB,EAA8BU,GAA9B,EAAmC;AACjCG,UAAAA,GAAG,EAAEC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoBf,MAAM,CAACU,GAAD,CAA1B;AAD4B,SAAnC;AAGAR,QAAAA,MAAM,CAACU,cAAP,CAAsBZ,MAAtB,EAA8BU,GAA9B,EAAmC;AACjCM,UAAAA,GAAG,EAAEC,wBAAwB,CAACF,IAAzB,CAA8B,IAA9B,EAAoCL,GAApC;AAD4B,SAAnC;AAGD;AACF;;AAEDR,IAAAA,MAAM,CAACgB,MAAP,CAAclB,MAAd;AACAE,IAAAA,MAAM,CAACiB,IAAP,CAAYnB,MAAZ;;AAEA,SAAK,IAAIQ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,EAAC,EAAlC,EAAsC;AACpC,UAAME,IAAG,GAAGL,IAAI,CAACG,EAAD,CAAhB;;AACA,UAAIF,eAAc,CAACK,IAAf,CAAoBX,MAApB,EAA4BU,IAA5B,CAAJ,EAAsC;AACpCX,QAAAA,iCAAiC,CAACC,MAAM,CAACU,IAAD,CAAP,CAAjC;AACD;AACF;AACF;;AACD,SAAOV,MAAP;AACD;;AAED,SAASiB,wBAAT,CAAkCP,GAAlC,EAAuCU,KAAvC,EAA8C;AAC5C,QAAMC,KAAK,CACT,mCACEX,GADF,GAEE,oBAFF,GAGEY,IAAI,CAACC,SAAL,CAAeH,KAAf,CAHF,GAIE,+CAJF,GAKE,sBANO,CAAX;AAQD;;AAED,SAASN,QAAT,CAAkBM,KAAlB,EAAyB;AACvB,SAAOA,KAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB1B,iCAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * If your application is accepting different values for the same field over\r\n * time and is doing a diff on them, you can either (1) create a copy or\r\n * (2) ensure that those values are not mutated behind two passes.\r\n * This function helps you with (2) by freezing the object and throwing if\r\n * the user subsequently modifies the value.\r\n *\r\n * There are two caveats with this function:\r\n *   - If the call site is not in strict mode, it will only throw when\r\n *     mutating existing fields, adding a new one\r\n *     will unfortunately fail silently :(\r\n *   - If the object is already frozen or sealed, it will not continue the\r\n *     deep traversal and will leave leaf nodes unfrozen.\r\n *\r\n * Freezing the object and adding the throw mechanism is expensive and will\r\n * only be used in DEV.\r\n */\r\nfunction deepFreezeAndThrowOnMutationInDev<T: Object>(object: T): T {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof object !== 'object' ||\r\n      object === null ||\r\n      Object.isFrozen(object) ||\r\n      Object.isSealed(object)\r\n    ) {\r\n      return object;\r\n    }\r\n\r\n    const keys = Object.keys(object);\r\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (hasOwnProperty.call(object, key)) {\r\n        Object.defineProperty(object, key, {\r\n          get: identity.bind(null, object[key]),\r\n        });\r\n        Object.defineProperty(object, key, {\r\n          set: throwOnImmutableMutation.bind(null, key),\r\n        });\r\n      }\r\n    }\r\n\r\n    Object.freeze(object);\r\n    Object.seal(object);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      if (hasOwnProperty.call(object, key)) {\r\n        deepFreezeAndThrowOnMutationInDev(object[key]);\r\n      }\r\n    }\r\n  }\r\n  return object;\r\n}\r\n\r\nfunction throwOnImmutableMutation(key, value) {\r\n  throw Error(\r\n    'You attempted to set the key `' +\r\n      key +\r\n      '` with the value `' +\r\n      JSON.stringify(value) +\r\n      '` on an object that is meant to be immutable ' +\r\n      'and has been frozen.',\r\n  );\r\n}\r\n\r\nfunction identity(value) {\r\n  return value;\r\n}\r\n\r\nmodule.exports = deepFreezeAndThrowOnMutationInDev;\r\n"]},"metadata":{},"sourceType":"script"}