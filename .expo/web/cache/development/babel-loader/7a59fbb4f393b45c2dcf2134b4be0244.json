{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"G:\\\\wamp64\\\\www\\\\projectWellbeingApp\\\\app\\\\screens\\\\Dashboard.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as Progress from \"react-native-progress\";\nimport AuthContext from \"../AuthContext/context\";\nimport Screen from \"../components/screen\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport progress from \"../api/progress\";\nimport AppText from \"../components/AppText\";\nimport Sugesstion from \"../components/Sugesstion\";\nimport { cos } from \"react-native-reanimated\";\nimport MostViewed from \"../components/MostViewed\";\nimport cacheStorage from \"../cache/cacheStorage\";\nimport LastViewed from \"../components/LastViewed\";\n\nfunction Dashboard(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      progressValue = _useState2[0],\n      setProgressValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suggestion = _useState4[0],\n      setSuggestion = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mostViewed = _useState6[0],\n      setMostViewed = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastViewed = _useState8[0],\n      setLastViewed = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    var staff_id = user[0][\"staff_id\"];\n    getProgress(staff_id);\n    getSuggestion(staff_id);\n    getMostViewed(staff_id);\n    getLastViewed();\n    setRefreshing(false);\n  };\n\n  var getProgress = function getProgress(staff_id) {\n    var result;\n    return _regeneratorRuntime.async(function getProgress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(progress.GetProgressValue(staff_id));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", console.log(\"No progress\"));\n\n          case 5:\n            return _context.abrupt(\"return\", setProgressValue(result.data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getSuggestion = function getSuggestion(staff_id) {\n    var result;\n    return _regeneratorRuntime.async(function getSuggestion$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(progress.GetSuggestion(staff_id));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result.ok) {\n              _context2.next = 6;\n              break;\n            }\n\n            console.log(\"No Progress\");\n            return _context2.abrupt(\"return\", setSuggestion(null));\n\n          case 6:\n            return _context2.abrupt(\"return\", setSuggestion(result.data));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMostViewed = function getMostViewed(staff_id) {\n    var result;\n    return _regeneratorRuntime.async(function getMostViewed$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(progress.GetMostViewed(staff_id));\n\n          case 2:\n            result = _context3.sent;\n\n            if (result.ok) {\n              _context3.next = 6;\n              break;\n            }\n\n            console.log(\"No progress\");\n            return _context3.abrupt(\"return\", setMostViewed(null));\n\n          case 6:\n            return _context3.abrupt(\"return\", setMostViewed(result.data));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getLastViewed = function getLastViewed() {\n    var result;\n    return _regeneratorRuntime.async(function getLastViewed$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(cacheStorage.getData(\"Last_viewed\"));\n\n          case 2:\n            result = _context4.sent;\n            setLastViewed(result);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var staff_id = user[0][\"staff_id\"];\n    getProgress(staff_id);\n    getSuggestion(staff_id);\n    getMostViewed(staff_id);\n    getLastViewed();\n  }, []);\n\n  var DisplayProgress = function DisplayProgress(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.textContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, item.resourceName)), React.createElement(Progress.Bar, {\n      animated: true,\n      animationType: \"decay\",\n      progress: item.progressVal,\n      color: \"red\",\n      height: 20,\n      width: 250,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(Screen, {\n    Newstyle: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Progress\"), React.createElement(View, {\n    style: styles.seperator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: progressValue,\n    renderItem: DisplayProgress,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Suggestion\"), React.createElement(View, {\n    style: styles.seperator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), React.createElement(Sugesstion, {\n    navigation: navigation,\n    route: route,\n    Data: suggestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Most Viewed\"), React.createElement(View, {\n    style: styles.seperator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), React.createElement(MostViewed, {\n    navigation: navigation,\n    route: route,\n    Data: mostViewed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  })), React.createElement(LastViewed, {\n    navigation: navigation,\n    Data: lastViewed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    backgroundColor: \"#f2f2f2\"\n  },\n  progressContainer: {\n    borderRadius: 15,\n    marginVertical: 15,\n    marginHorizontal: 10,\n    overflow: \"hidden\",\n    borderColor: \"#737373\",\n    borderWidth: 1\n  },\n  container: {\n    width: \"100%\",\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  seperator: {\n    width: \"100%\",\n    height: \"1%\",\n    backgroundColor: \"white\"\n  },\n  text: {\n    marginRight: 10\n  },\n  textContainer: {\n    width: \"26%\"\n  },\n  titleText: {\n    padding: 10,\n    fontSize: 20,\n    alignSelf: \"center\",\n    backgroundColor: \"#737373\",\n    color: \"white\",\n    width: \"100%\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["G:/wamp64/www/projectWellbeingApp/app/screens/Dashboard.js"],"names":["React","useState","useEffect","useContext","Progress","AuthContext","Screen","progress","AppText","Sugesstion","cos","MostViewed","cacheStorage","LastViewed","Dashboard","navigation","route","user","progressValue","setProgressValue","suggestion","setSuggestion","mostViewed","setMostViewed","lastViewed","setLastViewed","refreshing","setRefreshing","onRefresh","staff_id","getProgress","getSuggestion","getMostViewed","getLastViewed","GetProgressValue","result","ok","console","log","data","GetSuggestion","GetMostViewed","getData","DisplayProgress","item","styles","container","textContainer","text","resourceName","progressVal","screen","progressContainer","titleText","seperator","id","toString","StyleSheet","create","flex","backgroundColor","borderRadius","marginVertical","marginHorizontal","overflow","borderColor","borderWidth","width","flexDirection","padding","height","marginRight","fontSize","alignSelf","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  ScrollView,\r\n  RefreshControl,\r\n} from \"react-native\";\r\nimport * as Progress from \"react-native-progress\";\r\nimport AuthContext from \"../AuthContext/context\";\r\nimport Screen from \"../components/screen\";\r\nimport { FlatList, TouchableOpacity } from \"react-native\";\r\n\r\nimport progress from \"../api/progress\";\r\nimport AppText from \"../components/AppText\";\r\nimport Sugesstion from \"../components/Sugesstion\";\r\nimport { cos } from \"react-native-reanimated\";\r\nimport MostViewed from \"../components/MostViewed\";\r\nimport cacheStorage from \"../cache/cacheStorage\";\r\nimport LastViewed from \"../components/LastViewed\";\r\n\r\nfunction Dashboard({ navigation, route }) {\r\n  const { user } = useContext(AuthContext);\r\n  const [progressValue, setProgressValue] = useState([]);\r\n  const [suggestion, setSuggestion] = useState([]);\r\n  const [mostViewed, setMostViewed] = useState([]);\r\n  const [lastViewed, setLastViewed] = useState([]);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  //onRefresh\r\n  const onRefresh = () => {\r\n    setRefreshing(true);\r\n    let staff_id = user[0][\"staff_id\"];\r\n    getProgress(staff_id);\r\n    getSuggestion(staff_id);\r\n    getMostViewed(staff_id);\r\n    getLastViewed();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  //get the progress\r\n  const getProgress = async (staff_id) => {\r\n    const result = await progress.GetProgressValue(staff_id);\r\n    if (!result.ok) return console.log(\"No progress\");\r\n    return setProgressValue(result.data);\r\n  };\r\n\r\n  //get suggestion\r\n  const getSuggestion = async (staff_id) => {\r\n    const result = await progress.GetSuggestion(staff_id);\r\n    if (!result.ok) {\r\n      console.log(\"No Progress\");\r\n      return setSuggestion(null);\r\n    }\r\n    return setSuggestion(result.data);\r\n  };\r\n\r\n  //get most viewed\r\n  const getMostViewed = async (staff_id) => {\r\n    const result = await progress.GetMostViewed(staff_id);\r\n    if (!result.ok) {\r\n      console.log(\"No progress\");\r\n      return setMostViewed(null);\r\n    }\r\n    return setMostViewed(result.data);\r\n  };\r\n\r\n  //get last Viewed\r\n  const getLastViewed = async () => {\r\n    const result = await cacheStorage.getData(\"Last_viewed\");\r\n    setLastViewed(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let staff_id = user[0][\"staff_id\"];\r\n    getProgress(staff_id);\r\n    getSuggestion(staff_id);\r\n    getMostViewed(staff_id);\r\n    getLastViewed();\r\n  }, []);\r\n\r\n  const DisplayProgress = ({ item }) => {\r\n    return (\r\n      <>\r\n        <View style={styles.container}>\r\n          <View style={styles.textContainer}>\r\n            <Text style={styles.text}>{item.resourceName}</Text>\r\n          </View>\r\n          <Progress.Bar\r\n            animated\r\n            animationType={\"decay\"}\r\n            progress={item.progressVal}\r\n            color={\"red\"}\r\n            height={20}\r\n            width={250}\r\n          />\r\n        </View>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Screen Newstyle={styles.screen}>\r\n      <ScrollView\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      >\r\n        <>\r\n          <View style={styles.progressContainer}>\r\n            <Text style={styles.titleText}>Progress</Text>\r\n            <View style={styles.seperator}></View>\r\n\r\n            <FlatList\r\n              data={progressValue}\r\n              renderItem={DisplayProgress}\r\n              keyExtractor={(item) => item.id.toString()}\r\n            />\r\n          </View>\r\n          <View style={styles.progressContainer}>\r\n            <Text style={styles.titleText}>Suggestion</Text>\r\n            <View style={styles.seperator}></View>\r\n            <Sugesstion\r\n              navigation={navigation}\r\n              route={route}\r\n              Data={suggestion}\r\n            />\r\n          </View>\r\n          <View style={styles.progressContainer}>\r\n            <Text style={styles.titleText}>Most Viewed</Text>\r\n            <View style={styles.seperator}></View>\r\n            <MostViewed\r\n              navigation={navigation}\r\n              route={route}\r\n              Data={mostViewed}\r\n            />\r\n          </View>\r\n          <LastViewed navigation={navigation} Data={lastViewed} />\r\n        </>\r\n      </ScrollView>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    backgroundColor: \"#f2f2f2\",\r\n  },\r\n  progressContainer: {\r\n    borderRadius: 15,\r\n    marginVertical: 15,\r\n    marginHorizontal: 10,\r\n    overflow: \"hidden\",\r\n    borderColor: \"#737373\",\r\n    borderWidth: 1,\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    padding: 10,\r\n  },\r\n  seperator: {\r\n    width: \"100%\",\r\n    height: \"1%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  text: {\r\n    marginRight: 10,\r\n  },\r\n  textContainer: {\r\n    width: \"26%\",\r\n  },\r\n  titleText: {\r\n    padding: 10,\r\n    fontSize: 20,\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#737373\",\r\n    color: \"white\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}