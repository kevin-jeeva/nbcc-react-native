{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\nbcc-staff-react-native\\\\app\\\\screens\\\\Dashboard.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Progress from \"react-native-progress\";\nimport AuthContext from \"../AuthContext/context\";\nimport Screen from \"../components/screen\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport progress from \"../api/progress\";\nimport AppText from \"../components/AppText\";\nimport Sugesstion from \"../components/Sugesstion\";\n\nfunction Dashboard(props) {\n  var _this = this;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      progressValue = _useState2[0],\n      setProgressValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suggestion = _useState4[0],\n      setSuggestion = _useState4[1];\n\n  var getProgress = function getProgress(staff_id) {\n    var result;\n    return _regeneratorRuntime.async(function getProgress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(progress.GetProgressValue(staff_id));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", console.log(\"No progress\"));\n\n          case 5:\n            return _context.abrupt(\"return\", setProgressValue(result.data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getSuggestion = function getSuggestion(staff_id) {\n    var result;\n    return _regeneratorRuntime.async(function getSuggestion$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(progress.GetSuggestion(staff_id));\n\n          case 2:\n            result = _context2.sent;\n\n            if (result.ok) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", console.log(\"No Progress\"));\n\n          case 5:\n            return _context2.abrupt(\"return\", setSuggestion(result.data));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GetSuggestion = function GetSuggestion() {\n    return React.createElement(Sugesstion, {\n      Data: suggestion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 31\n      }\n    });\n  };\n\n  useEffect(function () {\n    var staff_id = user[0][\"staff_id\"];\n    getProgress(staff_id);\n    getSuggestion(staff_id);\n  }, []);\n\n  var DisplayProgress = function DisplayProgress(_ref) {\n    var item = _ref.item;\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.textContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, item.resourceName)), React.createElement(Progress.Bar, {\n      animated: true,\n      animationType: \"decay\",\n      progress: item.progressVal,\n      color: \"red\",\n      height: 20,\n      width: 250,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(Screen, {\n    Newstyle: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Progress\"), React.createElement(View, {\n    style: styles.seperator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: progressValue,\n    renderItem: DisplayProgress,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.progressContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Suggestion\"), React.createElement(View, {\n    style: styles.seperator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Sugesstion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: \"dodgerblue\"\n  },\n  progressContainer: {\n    backgroundColor: \"white\",\n    borderRadius: 15,\n    marginVertical: 20,\n    marginHorizontal: 10\n  },\n  container: {\n    width: \"100%\",\n    flex: 1,\n    flexDirection: \"row\",\n    padding: 10\n  },\n  seperator: {\n    width: \"100%\",\n    height: \"1%\",\n    backgroundColor: \"black\"\n  },\n  text: {\n    marginRight: 10\n  },\n  textContainer: {\n    width: \"26%\"\n  },\n  titleText: {\n    fontSize: 20,\n    alignSelf: \"center\"\n  }\n});\nexport default Dashboard;","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/app/screens/Dashboard.js"],"names":["React","useState","useEffect","useContext","Progress","AuthContext","Screen","FlatList","progress","AppText","Sugesstion","Dashboard","props","user","progressValue","setProgressValue","suggestion","setSuggestion","getProgress","staff_id","GetProgressValue","result","ok","console","log","data","getSuggestion","GetSuggestion","DisplayProgress","item","styles","container","textContainer","text","resourceName","progressVal","screen","progressContainer","titleText","seperator","id","toString","StyleSheet","create","backgroundColor","borderRadius","marginVertical","marginHorizontal","width","flex","flexDirection","padding","height","marginRight","fontSize","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { View, StyleSheet, Text } from \"react-native\";\r\nimport * as Progress from \"react-native-progress\";\r\nimport AuthContext from \"../AuthContext/context\";\r\nimport Screen from \"../components/screen\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\n\r\nimport progress from \"../api/progress\";\r\nimport AppText from \"../components/AppText\";\r\nimport Sugesstion from \"../components/Sugesstion\";\r\n\r\nfunction Dashboard(props) {\r\n  const { user } = useContext(AuthContext);\r\n  const [progressValue, setProgressValue] = useState([]);\r\n  const [suggestion, setSuggestion] = useState([]);\r\n\r\n  //get the progress\r\n  const getProgress = async (staff_id) => {\r\n    const result = await progress.GetProgressValue(staff_id);\r\n    if (!result.ok) return console.log(\"No progress\");\r\n    return setProgressValue(result.data);\r\n  };\r\n\r\n  //get suggestion\r\n  const getSuggestion = async (staff_id) => {\r\n    const result = await progress.GetSuggestion(staff_id);\r\n    if(!result.ok) return console.log(\"No Progress\");\r\n    return setSuggestion(result.data);\r\n  }\r\n  const GetSuggestion = () => <Sugesstion Data={suggestion}/>\r\n\r\n\r\n  useEffect(() => {\r\n    let staff_id = user[0][\"staff_id\"];\r\n    getProgress(staff_id);\r\n    getSuggestion(staff_id);\r\n  }, []);\r\n\r\n  const DisplayProgress = ({ item }) => {\r\n    return (\r\n      <>\r\n        <View style={styles.container}>\r\n          <View style={styles.textContainer}>\r\n            <Text style={styles.text}>{item.resourceName}</Text>\r\n          </View>\r\n          <Progress.Bar\r\n            animated\r\n            animationType={\"decay\"}\r\n            progress={item.progressVal}\r\n            color={\"red\"}\r\n            height={20}\r\n            width={250}\r\n          />\r\n        </View>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Screen Newstyle={styles.screen}>\r\n      <View style={styles.progressContainer}>\r\n        <Text style={styles.titleText}>Progress</Text>\r\n        <View style={styles.seperator}></View>\r\n        <FlatList\r\n          data={progressValue}\r\n          renderItem={DisplayProgress}\r\n          keyExtractor={(item) => item.id.toString()}\r\n        />\r\n      </View>\r\n       <View style={styles.progressContainer}>\r\n        <Text style={styles.titleText}>Suggestion</Text>\r\n        <View style={styles.seperator}></View>\r\n        <Sugesstion/>\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    backgroundColor: \"dodgerblue\",\r\n  },\r\n  progressContainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 15,\r\n    marginVertical: 20,\r\n    marginHorizontal: 10,\r\n  },\r\n  container: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    padding: 10,\r\n  },\r\n  seperator: {\r\n    width: \"100%\",\r\n    height: \"1%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  text: {\r\n    marginRight: 10,\r\n  },\r\n  textContainer: {\r\n    width: \"26%\",\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}