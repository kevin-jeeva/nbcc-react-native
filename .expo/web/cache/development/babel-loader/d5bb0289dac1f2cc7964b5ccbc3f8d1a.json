{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { cos } from \"react-native-reanimated\";\nvar key = \"authUser\";\n\nvar storeUser = function storeUser(user) {\n  return _regeneratorRuntime.async(function storeUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, user));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Erro storing the user\", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar restoreUser = function restoreUser() {\n  return _regeneratorRuntime.async(function restoreUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"Error getting the user\", _context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar removeUser = function removeUser() {\n  return _regeneratorRuntime.async(function removeUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(key));\n\n        case 3:\n          _context3.next = 8;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Error removing the user\", _context3.t0);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexport default {\n  restoreUser: restoreUser,\n  storeUser: storeUser,\n  removeUser: removeUser\n};","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/app/AuthContext/authStorage.js"],"names":["SecureStore","cos","key","storeUser","user","setItemAsync","console","log","restoreUser","getItemAsync","removeUser","deleteItemAsync"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,SAASC,GAAT,QAAoB,yBAApB;AAEA,IAAMC,GAAG,GAAG,UAAZ;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERJ,WAAW,CAACK,YAAZ,CAAyBH,GAAzB,EAA8BE,IAA9B,CAFQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIdE,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEHR,WAAW,CAACS,YAAZ,CAAyBP,GAAzB,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBI,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAqBA,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAETV,WAAW,CAACW,eAAZ,CAA4BT,GAA5B,CAFS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIfI,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAQA,eAAe;AACbC,EAAAA,WAAW,EAAXA,WADa;AAEbL,EAAAA,SAAS,EAATA,SAFa;AAGbO,EAAAA,UAAU,EAAVA;AAHa,CAAf","sourcesContent":["import * as SecureStore from \"expo-secure-store\";\r\nimport { cos } from \"react-native-reanimated\";\r\n\r\nconst key = \"authUser\";\r\n\r\nconst storeUser = async (user) => {\r\n  try {\r\n    await SecureStore.setItemAsync(key, user);\r\n  } catch (error) {\r\n    console.log(\"Erro storing the user\", error);\r\n  }\r\n};\r\n\r\nconst restoreUser = async () => {\r\n  try {\r\n    return await SecureStore.getItemAsync(key);\r\n  } catch (error) {\r\n    console.log(\"Error getting the user\", error);\r\n  }\r\n};\r\n\r\n// const getUser = async () => {\r\n//   try {\r\n//     const authUser = await restoreUser();\r\n//     if (authUser) {\r\n//       return authUser;\r\n//     } else {\r\n//       return null;\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(\"Error getting user\", error);\r\n//   }\r\n// };\r\n\r\nconst removeUser = async () => {\r\n  try {\r\n    await SecureStore.deleteItemAsync(key);\r\n  } catch (error) {\r\n    console.log(\"Error removing the user\", error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  restoreUser,\r\n  storeUser,\r\n  removeUser,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}