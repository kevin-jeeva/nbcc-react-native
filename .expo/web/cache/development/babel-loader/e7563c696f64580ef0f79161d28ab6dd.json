{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\nbcc-staff-react-native\\\\app\\\\screens\\\\AccountScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport authStorage from \"../AuthContext/authStorage\";\nimport AuthContext from \"../AuthContext/context\";\nimport Screen from \"../components/screen\";\nimport Seperator from \"../components/Seperator\";\nimport colors from \"../config/colors\";\nimport userApi from \"../api/user\";\nimport session from \"../cache/userSession\";\nimport AppButton from \"../components/AppButton\";\n\nfunction AccountScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      staff = _useState2[0],\n      setStaff = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      setUser = _useContext.setUser;\n\n  var handleLogout = function handleLogout() {\n    authStorage.removeUser();\n    setUser(null);\n  };\n\n  var getUser = function getUser() {\n    var result, nameResult;\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = session.getEmail();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(userApi.getUserbyEmail(email));\n\n          case 3:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", console.log(\"No User \" + email));\n\n          case 6:\n            nameResult = result.data[0][\"first_name\"];\n            return _context.abrupt(\"return\", setStaff({\n              fname: nameResult\n            }));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUser();\n  }, []);\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Your User Account\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(Seperator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Name: \", staff.fname, \" \"), React.createElement(Text, {\n    style: styles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Email: \", session.getEmail()), React.createElement(Text, {\n    style: styles.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Phone: \"), React.createElement(AppButton, {\n    text: \"Logout\",\n    onPress: handleLogout,\n    style: styles.logoutBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 20\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    color: colors.green,\n    marginTop: 25,\n    marginLeft: 50\n  },\n  mainText: {\n    padding: 10,\n    fontSize: 20,\n    textAlign: \"left\"\n  },\n  logoutBtn: {\n    backgroundColor: colors.primary\n  }\n});\nexport default AccountScreen;","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/app/screens/AccountScreen.js"],"names":["React","useEffect","useContext","useState","authStorage","AuthContext","Screen","Seperator","colors","userApi","session","AppButton","AccountScreen","props","staff","setStaff","setUser","handleLogout","removeUser","getUser","email","getEmail","getUserbyEmail","result","ok","console","log","nameResult","data","fname","styles","container","heading","mainText","logoutBtn","StyleSheet","create","paddingHorizontal","fontSize","fontWeight","color","green","marginTop","marginLeft","padding","textAlign","backgroundColor","primary"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { View, StyleSheet, Text, Button } from \"react-native\";\r\nimport authStorage from \"../AuthContext/authStorage\";\r\nimport AuthContext from \"../AuthContext/context\";\r\n\r\nimport Screen from \"../components/screen\";\r\nimport Seperator from \"../components/Seperator\";\r\nimport colors from \"../config/colors\";\r\nimport userApi from \"../api/user\";\r\nimport session from \"../cache/userSession\";\r\nimport AppButton from \"../components/AppButton\";\r\n\r\nfunction AccountScreen(props) {\r\n  const [staff, setStaff] = useState([]);\r\n\r\n  const { setUser } = useContext(AuthContext);\r\n  const handleLogout = () => {\r\n    authStorage.removeUser();\r\n    setUser(null);\r\n  };\r\n\r\n  const getUser = async () => {\r\n    email = session.getEmail();\r\n    const result = await userApi.getUserbyEmail(email);\r\n    if (!result.ok) return console.log(\"No User \" + email);\r\n    let nameResult = result.data[0][\"first_name\"];\r\n    return setStaff({\r\n      fname: nameResult,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Screen>\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>Your User Account</Text>\r\n        <Text></Text>\r\n        <Seperator />\r\n        <Text></Text>\r\n        <Text style={styles.mainText}>Name: {staff.fname} </Text>\r\n        <Text style={styles.mainText}>Email: {session.getEmail()}</Text>\r\n        <Text style={styles.mainText}>Phone: </Text>\r\n        <AppButton\r\n          text={\"Logout\"}\r\n          onPress={handleLogout}\r\n          style={styles.logoutBtn}\r\n        />\r\n      </View>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: colors.green,\r\n    marginTop: 25,\r\n    marginLeft: 50,\r\n  },\r\n  mainText: {\r\n    padding: 10,\r\n    fontSize: 20,\r\n    textAlign: \"left\",\r\n  },\r\n  logoutBtn: {\r\n    backgroundColor: colors.primary,\r\n  },\r\n});\r\n\r\nexport default AccountScreen;\r\n"]},"metadata":{},"sourceType":"module"}