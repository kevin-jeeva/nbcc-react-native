{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar storeData = function storeData(key, value) {\n  var exists, filterValues, result, len;\n  return _regeneratorRuntime.async(function storeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getData(key));\n\n        case 3:\n          exists = _context.sent;\n\n          if (!(exists != null)) {\n            _context.next = 13;\n            break;\n          }\n\n          filterValues = exists.filter(function (item) {\n            return item[\"content_id\"] != value[\"content_id\"];\n          });\n          result = [value].concat(_toConsumableArray(filterValues));\n          len = result.length;\n\n          if (len > 3) {\n            result = result.slice(0, 3);\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(result)));\n\n        case 11:\n          _context.next = 15;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify([value])));\n\n        case 15:\n          _context.next = 20;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 17]], Promise);\n};\n\nvar getData = function getData(key) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          jsonValue = _context2.sent;\n          return _context2.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nexport default {\n  storeData: storeData,\n  getData: getData\n};","map":{"version":3,"sources":["G:/wamp64/www/projectWellbeingApp/app/cache/cacheStorage.js"],"names":["React","AsyncStorage","storeData","key","value","getData","exists","filterValues","filter","item","result","len","length","slice","setItem","JSON","stringify","console","log","getItem","jsonValue","parse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGKC,OAAO,CAACF,GAAD,CAHZ;;AAAA;AAGVG,UAAAA,MAHU;;AAAA,gBAIVA,MAAM,IAAI,IAJA;AAAA;AAAA;AAAA;;AAKNC,UAAAA,YALM,GAKSD,MAAM,CAACE,MAAP,CACnB,UAACC,IAAD;AAAA,mBAAUA,IAAI,CAAC,YAAD,CAAJ,IAAsBL,KAAK,CAAC,YAAD,CAArC;AAAA,WADmB,CALT;AAQRM,UAAAA,MARQ,IAQEN,KARF,4BAQYG,YARZ;AASRI,UAAAA,GATQ,GASFD,MAAM,CAACE,MATL;;AAUZ,cAAID,GAAG,GAAG,CAAV,EAAa;AACXD,YAAAA,MAAM,GAAGA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAT;AACD;;AAZW;AAAA,2CAaNZ,YAAY,CAACa,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAeN,MAAf,CAA1B,CAbM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAeNT,YAAY,CAACa,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAe,CAACZ,KAAD,CAAf,CAA1B,CAfM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBda,UAAAA,OAAO,CAACC,GAAR;;AAlBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AAsBA,IAAMb,OAAO,GAAG,SAAVA,OAAU,CAAOF,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEYF,YAAY,CAACkB,OAAb,CAAqBhB,GAArB,CAFZ;;AAAA;AAENiB,UAAAA,SAFM;AAAA,4CAGLA,SAAS,IAAI,IAAb,GAAoBL,IAAI,CAACM,KAAL,CAAWD,SAAX,CAApB,GAA4C,IAHvC;;AAAA;AAAA;AAAA;AAKZH,UAAAA,OAAO,CAACC,GAAR;;AALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AASA,eAAe;AACbhB,EAAAA,SAAS,EAATA,SADa;AAEbG,EAAAA,OAAO,EAAPA;AAFa,CAAf","sourcesContent":["import React from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst storeData = async (key, value) => {\r\n  try {\r\n    //AsyncStorage.clear();\r\n    let exists = await getData(key);\r\n    if (exists != null) {\r\n      const filterValues = exists.filter(\r\n        (item) => item[\"content_id\"] != value[\"content_id\"]\r\n      );\r\n      var result = [value, ...filterValues];\r\n      let len = result.length;\r\n      if (len > 3) {\r\n        result = result.slice(0, 3);\r\n      }\r\n      await AsyncStorage.setItem(key, JSON.stringify(result));\r\n    } else {\r\n      await AsyncStorage.setItem(key, JSON.stringify([value]));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getData = async (key) => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(key);\r\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport default {\r\n  storeData,\r\n  getData,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}