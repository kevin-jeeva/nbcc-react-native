{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\nbcc-staff-react-native\\\\app\\\\screens\\\\ContentScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Screen from \"../components/screen\";\nimport colors from \"../config/colors\";\nimport contentApi from \"../api/content\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nfunction ContentScreen(_ref) {\n  var _this = this;\n\n  var _ref$resource = _ref.resource,\n      resource = _ref$resource === void 0 ? \"Articles\" : _ref$resource,\n      navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var getContents = function getContents() {\n    var result;\n    return _regeneratorRuntime.async(function getContents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(contentApi.content(route.params.resource));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", console.log(\"No resource\"));\n\n          case 5:\n            return _context.abrupt(\"return\", setContent(result.data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getContents();\n  }, []);\n\n  var Content = function Content(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableHighlight, {\n      style: styles.textContainer,\n      activeOpacity: 1,\n      underlayColor: colors.underLay,\n      onPress: function onPress() {\n        return navigation.navigate(\"ShowContent\", {\n          content_id: item.content_id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, React.createElement(React.Fragment, null, React.createElement(View, {\n      style: styles.cotentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.arrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.heading,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, item.content_title), React.createElement(Text, {\n      numberOfLines: 2,\n      style: styles.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, item.content_description)), React.createElement(View, {\n      style: styles.chevron,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"chevron-right\",\n      size: 25,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }))), React.createElement(View, {\n      style: styles.line,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: content,\n    renderItem: Content,\n    keyExtractor: function keyExtractor(item) {\n      return item.content_id.toString();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  arrow: {\n    width: \"100%%\"\n  },\n  chevron: {},\n  line: {\n    width: \"100%\",\n    backgroundColor: colors.iconLight,\n    height: 1\n  },\n  heading: {\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 20,\n    marginTop: 10\n  },\n  cotentContainer: {\n    flex: 1,\n    width: \"90%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  textContainer: {\n    flex: 1,\n    width: \"100%\",\n    paddingHorizontal: 15\n  },\n  description: {\n    marginVertical: 10\n  }\n});\nexport default ContentScreen;","map":{"version":3,"sources":["C:/wamp64/nbcc-staff-react-native/app/screens/ContentScreen.js"],"names":["React","useEffect","useState","MaterialCommunityIcons","Screen","colors","contentApi","FlatList","ContentScreen","resource","navigation","route","content","setContent","getContents","params","result","ok","console","log","data","Content","item","styles","textContainer","underLay","navigate","content_id","cotentContainer","arrow","heading","content_title","description","content_description","chevron","line","toString","StyleSheet","create","width","backgroundColor","iconLight","height","color","primary","fontWeight","fontSize","marginTop","flex","flexDirection","alignItems","justifyContent","paddingHorizontal","marginVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet, Text, TouchableHighlight } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport Screen from \"../components/screen\";\r\nimport colors from \"../config/colors\";\r\nimport contentApi from \"../api/content\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\n\r\nfunction ContentScreen({ resource = \"Articles\", navigation, route }) {\r\n  const [content, setContent] = useState([]);\r\n\r\n  const getContents = async () => {\r\n    const result = await contentApi.content(route.params.resource);\r\n    if (!result.ok) return console.log(\"No resource\");\r\n    return setContent(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContents();\r\n  }, []);\r\n\r\n  const Content = ({ item }) => {\r\n    return (\r\n      <TouchableHighlight\r\n        style={styles.textContainer}\r\n        activeOpacity={1}\r\n        underlayColor={colors.underLay}\r\n        onPress={() =>\r\n          navigation.navigate(\"ShowContent\", { content_id: item.content_id })\r\n        }\r\n      >\r\n        <>\r\n          <View style={styles.cotentContainer}>\r\n            <View style={styles.arrow}>\r\n              <Text style={styles.heading}>{item.content_title}</Text>\r\n              <Text numberOfLines={2} style={styles.description}>\r\n                {item.content_description}\r\n              </Text>\r\n            </View>\r\n            <View style={styles.chevron}>\r\n              <MaterialCommunityIcons\r\n                name=\"chevron-right\"\r\n                size={25}\r\n                color={\"black\"}\r\n              />\r\n            </View>\r\n          </View>\r\n          <View style={styles.line}></View>\r\n        </>\r\n      </TouchableHighlight>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Screen>\r\n      <FlatList\r\n        data={content}\r\n        renderItem={Content}\r\n        keyExtractor={(item) => item.content_id.toString()}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  arrow: {\r\n    width: \"100%%\",\r\n  },\r\n  chevron: {},\r\n  line: {\r\n    width: \"100%\",\r\n    backgroundColor: colors.iconLight,\r\n    height: 1,\r\n  },\r\n  heading: {\r\n    color: colors.primary,\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    marginTop: 10,\r\n  },\r\n  cotentContainer: {\r\n    flex: 1,\r\n    width: \"90%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  textContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n\r\n    paddingHorizontal: 15,\r\n  },\r\n  description: {\r\n    marginVertical: 10,\r\n  },\r\n});\r\n\r\nexport default ContentScreen;\r\n"]},"metadata":{},"sourceType":"module"}